@model List<ST10298850_PROG6212_POE.Models.LecturerModel>
@{
    var claims = ViewBag.Claims as List<ST10298850_PROG6212_POE.Models.LecturerClaimModel>;
}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<div class="HR-claim-main-content">
    <!-- Claims Table -->
    <div class="HR-table-container">
        <h2>Claims</h2>
        <form method="get" action="@Url.Action("HRPageView", "HR")" class="HR-filter-form">
            <div class="HR-form-group">
                <label for="filterType">Filter by:</label>
                <select name="filterType" id="filterType" class="HR-form-control">
                    <option value="date">Date</option>
                    <option value="status">Status</option>
                    <option value="userid">User ID</option>

                </select>
            </div>
            <div class="HR-form-group">
                <input type="text" name="filterValue" placeholder="Enter filter value" class="HR-form-control" />
            </div>
            <button type="submit" class="HR-btn-submit">Filter</button>
        </form>

        <div class="HR-table-wrapper">
            <table class="HR-table HR-claim-history-table">
                <thead>
                    <tr>
                        <th>Claim ID</th>
                        <th>User ID</th>
                        <th>Status</th>
                        <th>Submission Date</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (claims != null && claims.Any())
                    {
                        foreach (var claim in claims)
                        {
                            <tr>
                                <td>@claim.ClaimId</td>
                                <td>@claim.LecturerId</td>
                                <td>@claim.Status</td>
                                <td>@claim.SubmissionDate.ToShortDateString()</td>
                                <td>
                                    <a href="#" class="HR-btn-action">View</a>
                                    <a href="#" class="HR-btn-action">Edit</a>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="5">No claims found.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- Users Table -->
    <div class="HR-table-container">
        <h2>Users</h2>
        <div class="HR-table-wrapper">
            <!-- Add wrapper for scrolling -->
            <table class="HR-table HR-users-table">
                <thead>
                    <tr>
                        <th>User ID</th>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        foreach (var user in Model)
                        {
                            <tr>
                                <td>@user.LecturerId</td>
                                <td>@user.Name</td>
                                <td>@user.Email</td>
                                <td>
                                    <button onclick="editUser(@user.LecturerId)" class="HR-btn-edit">Edit</button>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="4">No users found.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <form method="get" action="@Url.Action("GenerateReport", "HR")" target="_blank">
        <input type="hidden" name="filterType" id="hiddenFilterType" value="" />
        <input type="hidden" name="filterValue" id="hiddenFilterValue" value="" />
        <button type="submit" class="HR-btn-generate-report">Generate Report</button>
    </form>
</div>

<!-- JavaScript Section -->

<script>
    // When a filter is applied
    // Update the report generation form based on current filters
    $('#generateReportButton').on('click', function () {
        const filterType = $('#filterTypeInput').val(); // Get the current filter type
        const filterValue = $('#filterValueInput').val(); // Get the current filter value

        console.log("Generating report with filter type:", filterType, "and filter value:", filterValue);

        // Construct the report URL with the current filters
        const reportUrl = `/ControllerName/GenerateReport?filterType=${filterType}&filterValue=${filterValue}`;

        // Redirect to the URL for report generation (downloads the file)
        window.location.href = reportUrl;
    });

    // Optional: If you apply filters dynamically and need to track them in hidden fields
    $('#applyFiltersButton').on('click', function () {
        const filterType = $('#filterType').val();
        const filterValue = $('#filterValue').val();

        // Update hidden fields for report generation
        $('#hiddenFilterType').val(filterType);
        $('#hiddenFilterValue').val(filterValue);
    });
    // Function to edit user details
    function editUser(userId) {
        const name = prompt("Enter new name:");
        const email = prompt("Enter new email:");
        if (name && email) {
            fetch('/HR/UpdateUser', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ LecturerId: userId, Name: name, Email: email })
            }).then(() => window.location.reload());
        }
    }
</script>